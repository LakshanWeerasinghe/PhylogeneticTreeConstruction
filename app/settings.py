"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import django_heroku

# Heroku: Update database configuration from $DATABASE_URL.
import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Custom Storage directory
CUSTOM_STORAGE_OPTIONS = os.path.dirname(
    os.path.dirname(os.path.abspath(__file__))) + "/storage"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%y(f&q848ae8u)!$f5ys$^eaj6my)hm9f=cz(bvneou&mq=@rb'
# SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = int(os.environ.get("DEBUG", default=0))
DEBUG = False

# These are the hosts that the server can run
ALLOWED_HOSTS = ['phlyogenetic-tree.herokuapp.com',
                 '127.0.0.1', 'localhost', '34.67.62.120']
# ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS").split(" ")

PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # installed apps for django
    'file_upload.apps.FileUploadConfig',
    'users.apps.UsersConfig',
    'dna_storage.apps.DnaStorageConfig',
    'cluster.apps.ClusterConfig',
    'neural_network.apps.NeuralNetworkConfig',

    # rest API implementation library for django
    'rest_framework',
    'rest_framework.authtoken',
    # 'rest_framework_swagger',

    # celery
    'django_celery_results',

    # cors
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # middleware for cors
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',

    # WhiteNoise
    'whitenoise.middleware.WhiteNoiseMiddleware',

    # csrf
    'django.middleware.csrf.CsrfViewMiddleware',

]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }

    # 'default': {
    #     'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #     'NAME': 'dna_tree',
    #     'USER': 'lakshan',
    #     'PASSWORD': 'lakshan',
    #     'HOST': 'db',
    #     'PORT': '5432'
    # }

    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'phylogenetic',
        'USER': 'sepgrp29',
        'PASSWORD': 'njlanjn1nsn',
        'HOST': '34.71.60.187',
        'PORT': '',
    }
    # }

    # DATABASES = {
    #     "default": {
    #         "ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
    #         "NAME": os.environ.get("SQL_DATABASE", os.path.join(BASE_DIR, "db.sqlite3")),
    #         "USER": os.environ.get("SQL_USER", "user"),
    #         "PASSWORD": os.environ.get("SQL_PASSWORD", "password"),
    #         "HOST": os.environ.get("SQL_HOST", "localhost"),
    #         "PORT": os.environ.get("SQL_PORT", "5432"),
    #     }
}

#db_from_env = dj_database_url.config(conn_max_age=500)
#DATABASES['default'] = dj_database_url.config()

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    )
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Colombo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

STATIC_URL = '/staticfiles/'


# cors configuration

CORS_ORIGIN_ALLOW_ALL = True

# keopOrvbfPBqvPwm

# AWS S3 storage configurations

AWS_ACCESS_KEY_ID = 'AKIA35HYTNT635SBY2CI'
AWS_SECRET_ACCESS_KEY = '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'
AWS_STORAGE_BUCKET_NAME = 'dnabank'

# Celery configurations

# CELERY_BROKER_URL = 'amqp://rabbitmq'
CELERY_BROKER_URL = 'amqp://rtlggxwy:PUtYsq3EOY-MpTYR9S2QvBS6dMxitzHp@porpoise.rmq.cloudamqp.com/rtlggxwy'


# CELERY_BROKER_URL = os.environ.get(
# 'CELERY_BROKER_URL', default='amqp://rabbitmq')

CELERY_RESULT_BACKEND = 'django-db'
CELERY_CACHE_BACKEND = 'django-cache'
# celery setting.
CELERY_CACHE_BACKEND = 'default'

DEFAULT_USERNAME = "defaultuser"

django_heroku.settings(locals())
